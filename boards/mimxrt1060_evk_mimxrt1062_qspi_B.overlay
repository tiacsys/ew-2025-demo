/*
 * Copyright (c) 2025 Navimatix GmbH
 * SPDX-License-Identifier: Apache-2.0
 */

#include <zephyr/dt-bindings/gpio/gpio.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	aliases {
		input-device = &potentiometer_input;
		stepper-motor = &drv8424;
	};
};
 
&lpi2c1 {
	status = "okay";
 
	mikroe_stepper_gpios: mikroe_stepper_ctrl_tca9538a@70 {
		status = "okay";
		compatible = "ti,tca9538";
 
		reg = < 0x70 >;
 
		gpio-controller;
		ngpios = < 8 >;
		#gpio-cells = < 2 >;
 
		gpio-reserved-ranges = < 7 1 >;
 
		 gpio-line-names =
			"M0",
			"M1",
			"DEC0",
			"DEC1",
			"TOFF",
			"STP",
			"DIR";
	};
};
 
/ {
 
	drv8424: drv8424 {
		status = "okay";
		compatible = "ti,drv8424";
		//  acceleration = < 200 >;
 
 
		dir-gpios = <&arduino_header 9 0>; /* D3 */
		step-gpios = <&arduino_header 10 0>; /* D4 */
		sleep-gpios = <&arduino_header 8 GPIO_ACTIVE_LOW>; /* D2 */
		en-gpios  = <&arduino_header 11 0>; /* D5 */
		m0-gpios = <&mikroe_stepper_gpios 0 0>;
		m1-gpios = <&mikroe_stepper_gpios 1 0>;
		timing-source = "counter-accel";

		counter = < &pit0_channel0 >;
		acceleration = <800>;
		accurate-steps = <15>;
 
		#address-cells = < 1 >;
		#size-cells = < 0 >;
		#stepper-motor-cells = < 0 >;
 
	};

	/* Configuration of the input device, in this a case a potentiometer whose range has
	   been divided into 4 discrete areas, each mapped to a key */
	potentiometer_input: potentiometer_input {
                compatible = "adc-keys";
                keyup-threshold-mv = <10000>;
                io-channels = <&adc1 0>;
                sample-period-ms = <100>;

		/* Key selection is based on the threshold that is closest to the current
		   potentiometer value instead of defining borders. */
                potentiometer_key_1: potentiometer_key_1 {
                        zephyr,code = <INPUT_KEY_1>;
                        press-thresholds-mv = <413>;
                };
                potentiometer_key_2: potentiometer_key_2 {
                        zephyr,code = <INPUT_KEY_2>;
                        press-thresholds-mv = <1237>;
                };
                potentiometer_key_3: potentiometer_key_3 {
                        zephyr,code = <INPUT_KEY_3>;
                        press-thresholds-mv = <2062>;
                };
                potentiometer_key_4: potentiometer_key_4 {
                        zephyr,code = <INPUT_KEY_4>;
                        press-thresholds-mv = <2887>;
                };
        };
};

&pit0_channel0 {
	status = "okay";
};
 
&adc1 {
	#address-cells = <1>;
	#size-cells = <0>;

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
};
 